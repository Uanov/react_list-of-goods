{"version":3,"sources":["Goods.jsx","Buttons.jsx","App.js","index.js"],"names":["Goods","goods","className","map","good","key","defaultProps","Buttons","reverse","sortByAlphabet","sortByLength","reset","type","onClick","goodsFromServer","App","state","buttonHide","isReversed","sortBy","showButton","setState","sortAlphabetically","this","copyGoods","sort","itemA","itemB","localeCompare","length","React","Component","ReactDOM","render","document","getElementById"],"mappings":"6NAGaA,G,MAAQ,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACnB,wBAAIC,UAAU,cACXD,EAAME,KAAI,SAAAC,GAAI,OACb,wBAAIF,UAAU,mBAAmBG,IAAKD,GACnCA,SAUTJ,EAAMM,aAAe,GCdd,IAAMC,EAAU,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,eAAgBC,EAA5B,EAA4BA,aAAcC,EAA1C,EAA0CA,MAA1C,OACrB,yBAAKT,UAAU,mBACb,4BACEA,UAAU,SACVU,KAAK,SACLC,QAASL,GAHX,WAOA,4BACEN,UAAU,SACVU,KAAK,SACLC,QAASJ,GAHX,uBAOA,4BACEP,UAAU,SACVU,KAAK,SACLC,QAASF,GAHX,SAOA,4BACET,UAAU,SACVU,KAAK,SACLC,QAASH,GAHX,oBCrBEI,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,YAAY,EACZC,OAAQ,GACRR,OAAO,GALX,EAQES,WAAa,WACX,EAAKC,SAAS,CACZJ,YAAY,KAVlB,EAcET,QAAU,WACR,EAAKa,UAAS,SAAAL,GAAK,MAAK,CACtBE,YAAaF,EAAME,WACnBP,OAAO,OAjBb,EAqBEW,mBAAqB,WACnB,EAAKD,SAAS,CACZF,OAAQ,WACRR,OAAO,KAxBb,EA4BEA,MAAQ,WACN,EAAKU,SAAS,CACZV,OAAO,EACPO,YAAY,EACZC,OAAQ,MAhCd,EAoCET,aAAe,WACb,EAAKW,SAAS,CACZF,OAAQ,SACRR,OAAO,KAvCb,4CA2CE,WAAU,IAAD,EAC2CY,KAAKP,MAA/CC,EADD,EACCA,WAAYC,EADb,EACaA,WAAYC,EADzB,EACyBA,OAAQR,EADjC,EACiCA,MACpCa,EAAS,UAAOV,GAqBpB,OAnBAU,EAAUC,MAAK,SAACC,EAAOC,GACrB,OAAQR,GACN,IAAK,WACH,OAAOO,EAAME,cAAcD,GAC7B,IAAK,SACH,OAAOD,EAAMG,OAASF,EAAME,OAC9B,QACE,OAAO,MAITX,GACFM,EAAUhB,UAGRG,IACFa,EAAS,UAAOV,IAIhB,yBAAKZ,UAAU,OACZe,EAEG,oCACE,kBAAC,EAAD,CACET,QAASe,KAAKf,QACdC,eAAgBc,KAAKD,mBACrBZ,aAAca,KAAKb,aACnBC,MAAOY,KAAKZ,QAEd,kBAAC,EAAD,CAAOV,MAAOuB,KAIhB,4BAAQtB,UAAU,SAASU,KAAK,SAASC,QAASU,KAAKH,YAAvD,cAjFZ,GAAyBU,IAAMC,WCd/BC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.ed0b7eb7.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Goods = ({ goods }) => (\n  <ul className=\"goods-list\">\n    {goods.map(good => (\n      <li className=\"goods-list__item\" key={good}>\n        {good}\n      </li>\n    ))}\n  </ul>\n);\n\nGoods.propTypes = {\n  goods: PropTypes.arrayOf(PropTypes.string.isRequired),\n};\n\nGoods.defaultProps = [];\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Buttons = ({ reverse, sortByAlphabet, sortByLength, reset }) => (\n  <div className=\"buttons-wrapper\">\n    <button\n      className=\"button\"\n      type=\"button\"\n      onClick={reverse}\n    >\n      Reverse\n    </button>\n    <button\n      className=\"button\"\n      type=\"button\"\n      onClick={sortByAlphabet}\n    >\n      Sort alphabetically\n    </button>\n    <button\n      className=\"button\"\n      type=\"button\"\n      onClick={reset}\n    >\n      Reset\n    </button>\n    <button\n      className=\"button\"\n      type=\"button\"\n      onClick={sortByLength}\n    >\n      Sort by length\n    </button>\n  </div>\n);\n\nButtons.propTypes = {\n  reverse: PropTypes.func.isRequired,\n  sortByAlphabet: PropTypes.func.isRequired,\n  sortByLength: PropTypes.func.isRequired,\n  reset: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './App.css';\nimport { Goods } from './Goods';\nimport { Buttons } from './Buttons';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport class App extends React.Component {\n  state = {\n    buttonHide: false,\n    isReversed: false,\n    sortBy: '',\n    reset: false,\n  }\n\n  showButton = () => {\n    this.setState({\n      buttonHide: true,\n    });\n  }\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n      reset: false,\n    }));\n  }\n\n  sortAlphabetically = () => {\n    this.setState({\n      sortBy: 'alphabet',\n      reset: false,\n    });\n  }\n\n  reset = () => {\n    this.setState({\n      reset: true,\n      isReversed: false,\n      sortBy: '',\n    });\n  }\n\n  sortByLength = () => {\n    this.setState({\n      sortBy: 'length',\n      reset: false,\n    });\n  }\n\n  render() {\n    const { buttonHide, isReversed, sortBy, reset } = this.state;\n    let copyGoods = [...goodsFromServer];\n\n    copyGoods.sort((itemA, itemB) => {\n      switch (sortBy) {\n        case 'alphabet':\n          return itemA.localeCompare(itemB);\n        case 'length':\n          return itemA.length - itemB.length;\n        default:\n          return 0;\n      }\n    });\n\n    if (isReversed) {\n      copyGoods.reverse();\n    }\n\n    if (reset) {\n      copyGoods = [...goodsFromServer];\n    }\n\n    return (\n      <div className=\"App\">\n        {buttonHide\n          ? (\n            <>\n              <Buttons\n                reverse={this.reverse}\n                sortByAlphabet={this.sortAlphabetically}\n                sortByLength={this.sortByLength}\n                reset={this.reset}\n              />\n              <Goods goods={copyGoods} />\n            </>\n          )\n          : (\n            <button className=\"button\" type=\"button\" onClick={this.showButton}>\n              Start\n            </button>\n          )\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}